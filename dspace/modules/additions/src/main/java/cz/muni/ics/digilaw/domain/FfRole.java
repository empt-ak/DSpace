//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.26 at 01:41:29 PM CET 
//


package cz.muni.ics.digilaw.domain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ffRole.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ffRole">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="Annotator"/>
 *     &lt;enumeration value="Artist"/>
 *     &lt;enumeration value="Assignee"/>
 *     &lt;enumeration value="Author"/>
 *     &lt;enumeration value="AuthorOfScreenplay"/>
 *     &lt;enumeration value="BibliographicAntecedent"/>
 *     &lt;enumeration value="Cartographer"/>
 *     &lt;enumeration value="Commentator"/>
 *     &lt;enumeration value="Compiler"/>
 *     &lt;enumeration value="Composer"/>
 *     &lt;enumeration value="Dedicatee"/>
 *     &lt;enumeration value="Dedicator"/>
 *     &lt;enumeration value="DubiousAuthor"/>
 *     &lt;enumeration value="Editor"/>
 *     &lt;enumeration value="Engraver"/>
 *     &lt;enumeration value="Etcher"/>
 *     &lt;enumeration value="FilmEditor"/>
 *     &lt;enumeration value="GraphicTechnician"/>
 *     &lt;enumeration value="Honoree"/>
 *     &lt;enumeration value="Illuminator"/>
 *     &lt;enumeration value="Illustrator"/>
 *     &lt;enumeration value="Interviewee"/>
 *     &lt;enumeration value="Interviewer"/>
 *     &lt;enumeration value="Librettist"/>
 *     &lt;enumeration value="Litographer"/>
 *     &lt;enumeration value="Lyricist"/>
 *     &lt;enumeration value="MetalEngraver"/>
 *     &lt;enumeration value="Originator"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="Performer"/>
 *     &lt;enumeration value="Photographer"/>
 *     &lt;enumeration value="Recipient"/>
 *     &lt;enumeration value="Rubricator"/>
 *     &lt;enumeration value="Scenarist"/>
 *     &lt;enumeration value="Secretary"/>
 *     &lt;enumeration value="Translator"/>
 *     &lt;enumeration value="TypeDesigner"/>
 *     &lt;enumeration value="Typographer"/>
 *     &lt;enumeration value="WoodEngraver"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ffRole")
@XmlEnum
public enum FfRole {

    @XmlEnumValue("Annotator")
    ANNOTATOR("Annotator"),
    @XmlEnumValue("Artist")
    ARTIST("Artist"),
    @XmlEnumValue("Assignee")
    ASSIGNEE("Assignee"),
    @XmlEnumValue("Author")
    AUTHOR("Author"),
    @XmlEnumValue("AuthorOfScreenplay")
    AUTHOR_OF_SCREENPLAY("AuthorOfScreenplay"),
    @XmlEnumValue("BibliographicAntecedent")
    BIBLIOGRAPHIC_ANTECEDENT("BibliographicAntecedent"),
    @XmlEnumValue("Cartographer")
    CARTOGRAPHER("Cartographer"),
    @XmlEnumValue("Commentator")
    COMMENTATOR("Commentator"),
    @XmlEnumValue("Compiler")
    COMPILER("Compiler"),
    @XmlEnumValue("Composer")
    COMPOSER("Composer"),
    @XmlEnumValue("Dedicatee")
    DEDICATEE("Dedicatee"),
    @XmlEnumValue("Dedicator")
    DEDICATOR("Dedicator"),
    @XmlEnumValue("DubiousAuthor")
    DUBIOUS_AUTHOR("DubiousAuthor"),
    @XmlEnumValue("Editor")
    EDITOR("Editor"),
    @XmlEnumValue("Engraver")
    ENGRAVER("Engraver"),
    @XmlEnumValue("Etcher")
    ETCHER("Etcher"),
    @XmlEnumValue("FilmEditor")
    FILM_EDITOR("FilmEditor"),
    @XmlEnumValue("GraphicTechnician")
    GRAPHIC_TECHNICIAN("GraphicTechnician"),
    @XmlEnumValue("Honoree")
    HONOREE("Honoree"),
    @XmlEnumValue("Illuminator")
    ILLUMINATOR("Illuminator"),
    @XmlEnumValue("Illustrator")
    ILLUSTRATOR("Illustrator"),
    @XmlEnumValue("Interviewee")
    INTERVIEWEE("Interviewee"),
    @XmlEnumValue("Interviewer")
    INTERVIEWER("Interviewer"),
    @XmlEnumValue("Librettist")
    LIBRETTIST("Librettist"),
    @XmlEnumValue("Litographer")
    LITOGRAPHER("Litographer"),
    @XmlEnumValue("Lyricist")
    LYRICIST("Lyricist"),
    @XmlEnumValue("MetalEngraver")
    METAL_ENGRAVER("MetalEngraver"),
    @XmlEnumValue("Originator")
    ORIGINATOR("Originator"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("Performer")
    PERFORMER("Performer"),
    @XmlEnumValue("Photographer")
    PHOTOGRAPHER("Photographer"),
    @XmlEnumValue("Recipient")
    RECIPIENT("Recipient"),
    @XmlEnumValue("Rubricator")
    RUBRICATOR("Rubricator"),
    @XmlEnumValue("Scenarist")
    SCENARIST("Scenarist"),
    @XmlEnumValue("Secretary")
    SECRETARY("Secretary"),
    @XmlEnumValue("Translator")
    TRANSLATOR("Translator"),
    @XmlEnumValue("TypeDesigner")
    TYPE_DESIGNER("TypeDesigner"),
    @XmlEnumValue("Typographer")
    TYPOGRAPHER("Typographer"),
    @XmlEnumValue("WoodEngraver")
    WOOD_ENGRAVER("WoodEngraver");
    private final String value;

    FfRole(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FfRole fromValue(String v) {
        for (FfRole c: FfRole.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
